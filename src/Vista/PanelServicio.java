/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.sql.*;
import javax.swing.*;
import Controlador.Conexion;
import Modelo.llenarCombo;
import Modelo.FuncionesServicio;
import javax.swing.JOptionPane;
import Controlador.ConstructorServicio;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author gdmer
 */
public class PanelServicio extends javax.swing.JPanel {

    //Declaracion de atributos
    Connection con2;
    Conexion con = new Conexion();
    ResultSet rs;
    Statement orden;

    /**
     * Creates new form PanelServicio
     */
    Date date = new Date();
    DateFormat fechaHora = new SimpleDateFormat("yyyy-MM-dd");
    String convertido = fechaHora.format(date);

    public PanelServicio() {
        initComponents();
        llenarCombo hp = new llenarCombo();
        cmbTipoServicio.setModel(hp.getValues2());
        cmbEstadoServicio.setModel(hp.getValues());
        llenar();
        acoplarTabla();
        btnActualizar.setEnabled(false);

//        t1.setVisible(false);
//        l1.setVisible(false);
        txtId.setEnabled(false);
        // txtFecha.setText(convertido);
    }

    public void acoplarTabla() {
        listServicio.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = listServicio.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(300);
        columnModel.getColumn(4).setPreferredWidth(150);
        columnModel.getColumn(5).setPreferredWidth(100);
        columnModel.getColumn(6).setPreferredWidth(100);
    }

    public void llenar() {
        FuncionesServicio obj = new FuncionesServicio();
        obj.CargarServicio(listServicio);

    }

    public void limpiar() {
        txtId.setText("");
        txtNombre.setText("");
        txtCodigo.setText("");
        txtDescripcion.setText("");
        txtBusqueda.setText("");
        // txtFecha.setText("");
        cmbTipoServicio.setSelectedIndex(0);
        cmbEstadoServicio.setSelectedIndex(0);
        btnActualizar.setEnabled(false);
        btnAgregar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        txtNombre = new javax.swing.JTextField();
        jSeparator16 = new javax.swing.JSeparator();
        txtDescripcion = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        jSeparator18 = new javax.swing.JSeparator();
        jLabel20 = new javax.swing.JLabel();
        cmbTipoServicio = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listServicio = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        cmbEstadoServicio = new javax.swing.JComboBox<>();
        jSeparator19 = new javax.swing.JSeparator();
        txtBusqueda = new javax.swing.JTextField();
        jSeparator20 = new javax.swing.JSeparator();
        btnBuscar = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnBaja1 = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        t1 = new javax.swing.JLabel();
        l1 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(33, 33, 33));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Administración de Servicios");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        txtCodigo.setBackground(new java.awt.Color(33, 33, 33));
        txtCodigo.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 255, 255));
        txtCodigo.setBorder(null);
        txtCodigo.setCaretColor(new java.awt.Color(255, 255, 255));
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 200, 35));

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("NOMBRE:");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, -1));
        add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 200, 8));

        txtNombre.setBackground(new java.awt.Color(33, 33, 33));
        txtNombre.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.setBorder(null);
        txtNombre.setCaretColor(new java.awt.Color(255, 255, 255));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 200, 35));
        add(jSeparator16, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, 200, 8));

        txtDescripcion.setBackground(new java.awt.Color(33, 33, 33));
        txtDescripcion.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setBorder(null);
        txtDescripcion.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });
        add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 440, 35));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("DESCRIPCIÓN:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));
        add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 440, 10));
        add(jSeparator18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 200, 10));

        jLabel20.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("TIPO SERVICIO:");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        cmbTipoServicio.setBackground(new java.awt.Color(33, 33, 33));
        cmbTipoServicio.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        cmbTipoServicio.setForeground(new java.awt.Color(255, 255, 255));
        cmbTipoServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTipoServicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbTipoServicio.setPreferredSize(new java.awt.Dimension(64, 25));
        add(cmbTipoServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 200, 30));

        jScrollPane2.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));

        listServicio = new javax.swing.JTable() {
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        listServicio.setBackground(new java.awt.Color(204, 204, 204));
        listServicio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listServicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listServicioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listServicio);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 910, 160));

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("ESTADO SERVICIO:");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        cmbEstadoServicio.setBackground(new java.awt.Color(33, 33, 33));
        cmbEstadoServicio.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        cmbEstadoServicio.setForeground(new java.awt.Color(255, 255, 255));
        cmbEstadoServicio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEstadoServicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbEstadoServicio.setPreferredSize(new java.awt.Dimension(64, 25));
        add(cmbEstadoServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 200, 30));
        add(jSeparator19, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 200, 10));

        txtBusqueda.setBackground(new java.awt.Color(33, 33, 33));
        txtBusqueda.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtBusqueda.setForeground(new java.awt.Color(255, 255, 255));
        txtBusqueda.setBorder(null);
        txtBusqueda.setCaretColor(new java.awt.Color(255, 255, 255));
        txtBusqueda.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBusqueda.setPreferredSize(new java.awt.Dimension(200, 0));
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });
        add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 180, 30));

        jSeparator20.setPreferredSize(new java.awt.Dimension(200, 0));
        add(jSeparator20, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 180, 10));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconografias/search.png"))); // NOI18N
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBuscarMousePressed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, -1, 40));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 0, 17)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Mantenimientos");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 130, -1));

        btnAgregar.setBackground(new java.awt.Color(153, 153, 153));
        btnAgregar.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosbotones/plus.png"))); // NOI18N
        btnAgregar.setText("Ingresar");
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 180, 55));

        btnActualizar.setBackground(new java.awt.Color(153, 153, 153));
        btnActualizar.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosbotones/loop.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 180, 55));

        btnBaja1.setBackground(new java.awt.Color(153, 153, 153));
        btnBaja1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnBaja1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosbotones/broom.png"))); // NOI18N
        btnBaja1.setText("Limpiar");
        btnBaja1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaja1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnBaja1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 180, 55));

        btnBaja.setBackground(new java.awt.Color(153, 153, 153));
        btnBaja.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosbotones/download.png"))); // NOI18N
        btnBaja.setText("Dar de Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });
        jPanel1.add(btnBaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 180, 55));

        btnMostrar.setBackground(new java.awt.Color(153, 153, 153));
        btnMostrar.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconosbotones/eye.png"))); // NOI18N
        btnMostrar.setText("Mostrar");
        btnMostrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 180, 55));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 200, 360));

        txtId.setBackground(new java.awt.Color(33, 33, 33));
        txtId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setBorder(null);
        txtId.setCaretColor(new java.awt.Color(255, 255, 255));
        add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 200, 35));

        t1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        t1.setForeground(new java.awt.Color(255, 255, 255));
        t1.setText("ID:");
        add(t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));
        add(l1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 200, 8));

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("CODIGO:");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:

        if (txtNombre.getText().trim().equals("") || txtDescripcion.getText().trim().equals("") || txtCodigo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Existen campos vacíos. Por favor, rellenelos", "Mensaje", JOptionPane.WARNING_MESSAGE);
        } else {
            FuncionesServicio obj = new FuncionesServicio();
            ConstructorServicio xd = new ConstructorServicio();
            int ids = obj.idIncremental();
            xd.setId(ids);
            xd.setCodigo(txtCodigo.getText());
            xd.setNombreSer(txtNombre.getText());
            xd.setDescripcion(txtDescripcion.getText());
            xd.setFecha(convertido);

            int xD = obj.getIdTipo(String.valueOf(cmbTipoServicio.getItemAt(cmbTipoServicio.getSelectedIndex())));

            int xD2 = obj.getIdEstado(String.valueOf(cmbEstadoServicio.getItemAt(cmbEstadoServicio.getSelectedIndex())));

            xd.setIdTipo(xD);
            xd.setIdEstado(xD2);

            if (obj.guardarServicio(xd)) {
                JOptionPane.showMessageDialog(this, "Datos Agregados");
                llenar();
                acoplarTabla();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar datos");
            }
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        if (txtId.getText().trim().equals("") || txtNombre.getText().trim().equals("") || txtDescripcion.getText().trim().equals("") || txtCodigo.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Existen campos vacíos. Por favor, rellenelos", "Mensaje", JOptionPane.WARNING_MESSAGE);
        } else {
            FuncionesServicio obj = new FuncionesServicio();
            ConstructorServicio xd = new ConstructorServicio();

            xd.setId(Integer.parseInt(txtId.getText()));
            xd.setCodigo(txtCodigo.getText());
            xd.setNombreSer(txtNombre.getText());
            xd.setDescripcion(txtDescripcion.getText());
            //xd.setFecha(convertido);

            int xD = obj.getIdTipo(String.valueOf(cmbTipoServicio.getItemAt(cmbTipoServicio.getSelectedIndex())));

            int xD2 = obj.getIdEstado(String.valueOf(cmbEstadoServicio.getItemAt(cmbEstadoServicio.getSelectedIndex())));

            xd.setIdTipo(xD);
            xd.setIdEstado(xD2);

            if (obj.actualizarServicio(xd)) {
                JOptionPane.showMessageDialog(this, "Datos Actualizados");
                llenar();
                acoplarTabla();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar datos");
            }

        }


    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed

        if (txtId.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Existen campos vacíos. Por favor, rellenelos", "Mensaje", JOptionPane.WARNING_MESSAGE);
        } else {
            int baja = 4;

            FuncionesServicio obj = new FuncionesServicio();
            ConstructorServicio xd = new ConstructorServicio();
            xd.setIdEstado(baja);
            xd.setId(Integer.parseInt(txtId.getText()));
            if (obj.darBaja(xd)) {
                if (obj.darBaja(xd)) {
                    JOptionPane.showMessageDialog(null, "Datos Inhabilitados");
                    llenar();
                    acoplarTabla();
                    limpiar();

                } else {
                    JOptionPane.showMessageDialog(this, "Error al actualizar los datos");
                }

            }
        }


    }//GEN-LAST:event_btnBajaActionPerformed

    private void btnBaja1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaja1ActionPerformed
        limpiar();

    }//GEN-LAST:event_btnBaja1ActionPerformed

    private void listServicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listServicioMouseClicked
        // TODO add your handling code here:
        int fila = listServicio.getSelectedRow();
        txtId.setText(String.valueOf(listServicio.getValueAt(fila, 0)));

        txtCodigo.setText(String.valueOf(listServicio.getValueAt(fila, 1)));
        txtNombre.setText(String.valueOf(listServicio.getValueAt(fila, 2)));
        txtDescripcion.setText(String.valueOf(listServicio.getValueAt(fila, 3)));
        cmbTipoServicio.setSelectedItem(String.valueOf(listServicio.getValueAt(fila, 5)));
        cmbEstadoServicio.setSelectedItem(String.valueOf(listServicio.getValueAt(fila, 6)));
        btnAgregar.setEnabled(false);
        btnActualizar.setEnabled(true);

    }//GEN-LAST:event_listServicioMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnBuscarMousePressed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9') && (car != (int) KeyEvent.VK_ENTER) && (car != (int) KeyEvent.VK_BACK_SPACE)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }

        //Validamos el limite de caracteres
        if (txtCodigo.getText().length() == 25) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Limite de caracteres");
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
//           Character e ;
//      e=evt.getKeyChar();
//      if(!Character.isLetter(e) && e!=KeyEvent.VK_SPACE )
//      {
//         evt.consume();
//      }

        //Validamos el limite de caracteres
        if (txtDescripcion.getText().length() == 100) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Limite de caracteres");
        }

    }//GEN-LAST:event_txtDescripcionKeyTyped

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        FuncionesServicio obj = new FuncionesServicio();
        ConstructorServicio xd = new ConstructorServicio();

        if (txtBusqueda.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Busqueda esta vacio, por favor rellenelo", "Mensaje", JOptionPane.WARNING_MESSAGE);

        } else {
            xd.setId(Integer.parseInt(txtBusqueda.getText()));

            if (obj.consultarServicio(xd)) {
                txtId.setText(Integer.toString(xd.getId()));
                txtNombre.setText(xd.getNombreSer());
                txtCodigo.setText(xd.getCodigo());
                txtDescripcion.setText(xd.getDescripcion());
                cmbTipoServicio.setSelectedItem(obj.seleccionarItemTipo(xd));
                cmbEstadoServicio.setSelectedItem(obj.seleccionarItemEstado(xd));
                llenar();
                acoplarTabla();

            } else {
                JOptionPane.showMessageDialog(this, "Error al consultar datos");
            }
        }

//        btnAgregar.setEnabled(false);
//        btnActualizar.setEnabled(true);

    }//GEN-LAST:event_btnMostrarActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped

        Character e;
        e = evt.getKeyChar();
        if (!Character.isLetter(e) && e != KeyEvent.VK_SPACE) {
            evt.consume();
        }

        //Validamos el limite de caracteres
        if (txtNombre.getText().length() == 65) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Limite de caracteres");
        }


    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed

//        DefaultTableModel model = new DefaultTableModel();
//        String[] columnas = {"ID", "Codigo", "Nombre", "Descripcion", "Fecha", "TipoServicio", "Estado"};
//        model = new DefaultTableModel(null, columnas);
//
//        String sql = "SELECT idServicio, codigo, nombreServicio, descripcion, fechaRegistro, tipoServicio, estadoServicio from Servicio s, TipoServicio ts, EstadoServicio es WHERE s.idTipoServicio = ts.idTipoServicio and s.idEstadoServicio = es.idEstadoServicio ORDER BY idServicio and nombreServicio LIKE '%" + txtBusqueda.getText() + "%'";
//        String[] filas = new String[7];
//        Statement st = null;
//        ResultSet rs = null;
//        try {
//            orden = con2.createStatement();
//            rs = st.executeQuery(sql);
//            while (rs.next()) {
//                for (int i = 0; i < 7; i++) {
//                    filas[i] = rs.getString(i + 1);
//                }
//                model.addRow(filas);
//            }
//            listServicio.setModel(model);
//            acoplarTabla();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "No se puede mostrar la tabla");
//        }
    }//GEN-LAST:event_txtBusquedaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnBaja1;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JComboBox<String> cmbEstadoServicio;
    private javax.swing.JComboBox<String> cmbTipoServicio;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator18;
    private javax.swing.JSeparator jSeparator19;
    private javax.swing.JSeparator jSeparator20;
    private javax.swing.JSeparator l1;
    private javax.swing.JTable listServicio;
    private javax.swing.JLabel t1;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
